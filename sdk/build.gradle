apply plugin: 'com.android.library'
apply plugin: 'com.kezong.fat-aar'
//apply plugin: 'com.github.dcendents.android-maven'


//group = 'com.github.liuweile'//this is your github name


android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.adSdkMinSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        consumerProguardFiles 'proguard-consumer.pro'//配置自定义的混淆规则,会将混淆文件打包进aar中
        multiDexEnabled true
    }

    buildTypes {
        debug{
            minifyEnabled false
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.4.1'

//    implementation files('libs/alx-omsdk-android-1.3.32-release.aar')
    embed(name: 'alx-omsdk-android-1.3.32-release', ext: 'aar')
}




//////////////////////////////////////////// 打包发布配置开始
//打包命令：./gradlew uploadArchives
//apply plugin: 'maven'
//ext {
//    //从github上clone下来的项目的本地地址
//    GITHUB_REPO_PATH = maven_path //打包后文件存放地址，可随意修改
//    PUBLISH_GROUP_ID = maven_group_id
//    PUBLISH_ARTIFACT_ID = "alx"
//    PUBLISH_VERSION = maven_version
//}
//
//uploadArchives {
//    repositories.mavenDeployer {
//        def deployPath = file(project.GITHUB_REPO_PATH)
//        repository(url: "file://${deployPath.absolutePath}")
//        pom.project {
//            groupId project.PUBLISH_GROUP_ID
//            artifactId project.PUBLISH_ARTIFACT_ID
//            version project.PUBLISH_VERSION
//        }
//    }
//}
//
////此sdk的源码不对外，所以不要打包出去
////源代码一起打包
//task androidSourcesJar(type: Jar) {
//    archiveClassifier.set('sources')
//    from android.sourceSets.main.java.sourceFiles
//}
//
//artifacts {
//    archives androidSourcesJar
//}
////////////////////////////////////////////打包发布配置结束


//--------------打包发布配置【maven-publish】start---------------
//打包命令： ./gradlew publish
apply plugin: 'maven-publish'
afterEvaluate {
    publishing{
        publications{
            release(MavenPublication){
                from components.release //必须加这个，不然aar不会上传
//                artifact(androidSourcesJar) //将源码打包进aar[aar 不需要源码让开发者可见]

                groupId = maven_group_id
                artifactId = maven_artifact_id
                version = maven_version
            }
        }

        repositories {
            maven {
                allowInsecureProtocol true //是否支持不安全的连接
                name = 'alx' //可选
                url = maven_path
//                credentials {
//                    username = maven_username
//                    password = maven_password
//                }
            }
        }

    }
}

////此sdk的源码不对外，所以不要打包出去
////源代码一起打包
//task androidSourcesJar(type: Jar) {
//    archiveClassifier.set('sources')
//    from android.sourceSets.main.java.sourceFiles
//}
//--------------打包发布配置【maven-publish】end---------------
